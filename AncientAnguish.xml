<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<ScriptPackage>
		<Script isActive="yes" isFolder="no">
			<name>Mapper</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
mapTable = {}

function readMapFiles(file)
    MAPTILEWIDTH = 2
    lines = {}
		sep = "%s"
		print("Loading map")
    for line in io.lines(file) do
			mapTable[#mapTable + 1] = {} -- Init new row
			for tile in string.gmatch(line, "([^"..sep.."]+)") do
        table.insert(mapTable[#mapTable], tile)
			  end
			end
    return mapTable
end

function displayMap(mapTable, x,y, size)
-- to do
-- handle negative coordinate bullshit. (Tant is 0,0)
-- check if we're on an edge
-- do a &lt; &gt; around center
-- color it

  XOFFSET = 18
	YOFFSET = 61
	--print("Printing Y: " .. ((y + YOFFSET)-size) .. " to " .. (y + YOFFSET + size))
  --print("Printing X: " .. ((x + XOFFSET)-size) .. " to " .. (x + XOFFSET + size))
	for line = (math.abs(y - YOFFSET)-size), (math.abs(y - YOFFSET) + size) do
	   for tile = ((x + XOFFSET)-size), (x + XOFFSET + size) do
		    if line == (math.abs(y - YOFFSET)) and tile == (x + XOFFSET) then
				  echo("map", "&lt;" .. mapTable[line][tile] .. "&gt;" .. " ")
				else
				  echo("map", mapTable[line][tile] .. " ")
				end
			end
		  echo("map","\n")
  end
end

function dumpMap(mapTable)
  for x = 1, #mapTable do
	  for y = 1, #mapTable[x] do
		  echo(mapTable[x][y] .. " ")
		end
		  echo("\n")
	 end
end

local windowWidth, windowHeight = getMainWindowSize()
createMiniConsole("map", windowWidth-400,10,350,350)
clearWindow("map")
mapTable = readMapFiles("/home/arcane/aa.txt")
displayMap(mapTable, 0,0, 6)
</script>
			<eventHandlerList />
		</Script>
	</ScriptPackage>
</MudletPackage>
